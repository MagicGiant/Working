1)
#include <iostream>
#include <vector>
#include <fstream>
using namespace std;
 int main()
{
    ifstream fin ("stack.in");
    ofstream fout ("stack.out");
    int n, j=0;
    fin >> n;
    vector <int> arr (n);
    char sing;
    for (int i=0; i<n; i++)
    {
        fin >> sing;
        if(sing == '+')
        {
            fin >> arr[j];
            j++;
        }
        else
        {
            j--;
            fout << arr[j] << endl;
        }
    }
    return 0;
}
2)
#include <iostream>
#include <vector>
#include <fstream>
using namespace std;
 int main()
{
    ifstream fin ("queue.in");
    ofstream fout ("queue.out");
    int n, j=0, i=0;
    fin >> n;
    vector <int> arr (n);
    char sing;
    for (int k=0; k<n; k++)
    {
        fin >> sing;
        if(sing == '+')
        {
            fin >> arr[i];
            i++;
        }
        else
        {
            fout << arr[j] << endl;
            j++;
        }
    }
    return 0;
}
3)
#include <iostream>
#include <fstream>
#include <vector>
#include <stack>
#include <queue>
using namespace std;
int test (string str)
{
    stack <char> steck;
    char a, b;
    int length_steck=0;
    for (int i=0; i<str.length(); i++)
    {
        if (str[i]=='(' || str[i]=='[')
            steck.push(str[i]);
        else
            if(steck.empty())
                return 1;
            else
                if((steck.top()=='[' && str[i]==']') || (steck.top()=='(' && str[i]==')'))
                    steck.pop();
                else
                    return 1;
    }
    if (steck.empty()) 
        return 0;
    else
        return 1;
}
int main()
{
    ifstream fin ("brackets.in");
    ofstream fout("brackets.out");
    queue <string> arr;
    string ch;
    while (fin>>ch)
        arr.push(ch);
    while (!arr.empty())
    {
        if (!test(arr.front()))
            fout << "YES" << endl;
        else
            fout << "NO" <<endl;
        arr.pop();
    }
    return 0;
}
4)
#include <iostream>
#include <fstream>
#include <vector>
using namespace std;
int main()
{
    ifstream fin ("binsearch.in");
    ofstream fout ("binsearch.out");
    int n, N;
    fin >> n;
    vector <int> arr (n);
    for (int i=0; i<n; i++)
        fin >> arr[i];
    fin >> N;
    vector <int> ARR (N);
    for (int i=0; i<N; i++)
        fin >> ARR[i];
    for (int i=0; i<N; i++)
    {
        int l=0; int r=n-1;
        int mid;
        bool flag = false;
        while ((l <= r) && (flag != true)) 
        {
            mid = (l + r) / 2;
            if (arr[mid] == ARR[i]) flag = true;
            if (arr[mid] > ARR[i]) r = mid - 1;
            else l = mid + 1;
        }
        if (flag)
        {
            int j=mid;
            while (j>0 && arr[j-1]==arr[mid])
                j--;
            fout << j+1;
            j=mid;
            while (j<n && arr[j+1]==arr[mid])
                j++;
            fout << " " << j+1 << endl;
        }
        else
            fout << "-1 -1" << endl;
    }
    return 0;
}
5)
#include <iostream>
#include <fstream>
#include <vector>
using namespace std;
int main()
{
    ifstream fin ("binsearch.in");
    ofstream fout ("binsearch.out");
    int n, N;
    fin >> n;
    vector <int> arr (n);
    for (int i=0; i<n; i++)
        fin >> arr[i];
    fin >> N;
    vector <int> ARR (N);
    for (int i=0; i<N; i++)
        fin >> ARR[i];
    for (int i=0; i<N; i++)
    {
        int l=0; int r=n-1;
        int mid;
        bool flag = false;
        while ((l <= r) && (flag != true)) 
        {
            mid = (l + r) / 2;
            if (arr[mid] == ARR[i]) flag = true;
            if (arr[mid] > ARR[i]) r = mid - 1;
            else l = mid + 1;
        }
        if (flag)
        {
            int j=mid;
            while (j>0 && arr[j-1]==arr[mid])
                j--;
            fout << j+1;
            j=mid;
            while (j<n && arr[j+1]==arr[mid])
                j++;
            fout << " " << j+1 << endl;
        }
        else
            fout << "-1 -1" << endl;
    }
    return 0;
}
6)
#include <iostream>
#include <vector>
#include <fstream> 
#include <string>
#include <cstdlib>
using namespace std;
 
int n;
vector<double> h;
 
double B()
{
    double l = 0, r = h[0];
    while (r - l > 0.0000000001) {
        h[1] = (l + r) / 2;
        bool Up = true;
        for (int i = 2; i < n; i++) {
            h[i] = 2 * h[i - 1] - h[i - 2] + 2;
            if (h[i] < 0) {
                Up = false;
                break;
            }
        }
        if (Up) {
            r = h[1];
        }
        else {
            l = h[1];
        }
         
 
    }
    return h[n - 1];
     
}
int main()
{
    ifstream in;
    ofstream out;
    in.open("garland.in");
    out.open("garland.out");
    in >> n;
    h.resize(n);
    in >> h[0];
    double a = B();
    out << fixed <<  a;
    in.close();
    out.close();
    return 0;
}